/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { DictatorDAO, DictatorDAOInterface } from "../DictatorDAO";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "sharesSymbol",
        type: "string",
      },
      {
        internalType: "string",
        name: "sharesName",
        type: "string",
      },
      {
        internalType: "contract IERC20",
        name: "token_",
        type: "address",
      },
      {
        internalType: "address",
        name: "initialOperator",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "txHash",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "CancelTransaction",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "txHash",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "ExecuteTransaction",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "txHash",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "eta",
        type: "uint256",
      },
    ],
    name: "QueueTransaction",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "DELAY",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "GRACE_PERIOD",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "shares",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "shares",
        type: "uint256",
      },
    ],
    name: "burnFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "cancelTransaction",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "executeTransaction",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "operatorVote",
        type: "address",
      },
    ],
    name: "mint",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "operator",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pendingOperator",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pendingOperatorTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner_",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "permit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "queueTransaction",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "queuedTransactions",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOperator",
        type: "address",
      },
    ],
    name: "setOperator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "shares",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "shares",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "userVote",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "users",
    outputs: [
      {
        internalType: "uint128",
        name: "balance",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "lockedUntil",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operatorVote",
        type: "address",
      },
    ],
    name: "vote",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "votes",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60e06040523480156200001157600080fd5b50604051620028333803806200283383398101604081905262000034916200021e565b4660a08190526200004581620000b0565b6080525083516200005e90600090602087019062000106565b5082516200007490600190602086019062000106565b5060609190911b6001600160601b03191660c052600380546001600160a01b0319166001600160a01b0390921691909117905550620003d99050565b60007f47e79534a245952e8b16893a336b85a3d9ea9fa8c573f3d803afb92a794692188230604051602001620000e993929190620002d3565b604051602081830303815290604052805190602001209050919050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200014957805160ff191683800117855562000179565b8280016001018555821562000179579182015b82811115620001795782518255916020019190600101906200015c565b50620001879291506200018b565b5090565b5b808211156200018757600081556001016200018c565b8051620001af81620003b4565b92915050565b8051620001af81620003ce565b600082601f830112620001d457600080fd5b8151620001eb620001e58262000330565b62000309565b915080825260208301602083018583830111156200020857600080fd5b6200021583828462000381565b50505092915050565b600080600080608085870312156200023557600080fd5b84516001600160401b038111156200024c57600080fd5b6200025a87828801620001c2565b94505060208501516001600160401b038111156200027757600080fd5b6200028587828801620001c2565b93505060406200029887828801620001b5565b9250506060620002ab87828801620001a2565b91505092959194509250565b620002c28162000358565b82525050565b620002c28162000365565b60608101620002e38286620002c8565b620002f26020830185620002c8565b620003016040830184620002b7565b949350505050565b6040518181016001600160401b03811182821017156200032857600080fd5b604052919050565b60006001600160401b038211156200034757600080fd5b506020601f91909101601f19160190565b6000620001af8262000375565b90565b6000620001af8262000358565b6001600160a01b031690565b60005b838110156200039e57818101518382015260200162000384565b83811115620003ae576000848401525b50505050565b620003bf8162000358565b8114620003cb57600080fd5b50565b620003bf8162000368565b60805160a05160c05160601c6124166200041d60003980610b275280610d1152806112bb52806116bb52806117ed52508061159d5250806115d252506124166000f3fe6080604052600436106101cd5760003560e01c806395d89b41116100f7578063d505accf11610095578063ec60bcf311610064578063ec60bcf3146104f1578063f2b0653714610511578063f5ba1c8714610531578063fc0c546a14610551576101cd565b8063d505accf14610471578063d8bff5a514610491578063dd62ed3e146104b1578063e37c9fd5146104d1576101cd565b8063a9059cbb116100d1578063a9059cbb14610405578063ac7e534e14610425578063b3ab15fb1461043a578063c1a287e21461045c576101cd565b806395d89b41146103a25780639dc29fac146103b7578063a87430ba146103d7576101cd565b80634881636d1161016f57806370a082311161013e57806370a08231146103225780637ecebe001461034257806380b3b0991461036257806394bf804d14610382576101cd565b80634881636d146102b6578063570ca735146102cb57806369b41170146102ed5780636dd7d8ea14610302576101cd565b806323b872dd116101ab57806323b872dd1461024c578063313ce5671461026c5780633644e5151461028e5780633f579f42146102a3576101cd565b806306fdde03146101d2578063095ea7b3146101fd57806318160ddd1461022a575b600080fd5b3480156101de57600080fd5b506101e7610573565b6040516101f49190612156565b60405180910390f35b34801561020957600080fd5b5061021d610218366004611b70565b610600565b6040516101f49190612083565b34801561023657600080fd5b5061023f61066b565b6040516101f49190612091565b34801561025857600080fd5b5061021d610267366004611a87565b610671565b34801561027857600080fd5b50610281610693565b6040516101f491906122df565b34801561029a57600080fd5b5061023f610698565b6101e76102b1366004611ba0565b6106a7565b3480156102c257600080fd5b5061023f610881565b3480156102d757600080fd5b506102e0610887565b6040516101f49190611ffc565b3480156102f957600080fd5b5061023f610896565b34801561030e57600080fd5b5061021d61031d366004611a27565b61089d565b34801561032e57600080fd5b5061023f61033d366004611a27565b61097c565b34801561034e57600080fd5b5061023f61035d366004611a27565b6109a0565b34801561036e57600080fd5b5061023f61037d366004611ba0565b6109b2565b34801561038e57600080fd5b5061021d61039d366004611c55565b610ab7565b3480156103ae57600080fd5b506101e7610def565b3480156103c357600080fd5b5061021d6103d2366004611b70565b610e4a565b3480156103e357600080fd5b506103f76103f2366004611a27565b610e57565b6040516101f4929190612275565b34801561041157600080fd5b5061021d610420366004611b70565b610e7d565b34801561043157600080fd5b506102e0610e8a565b34801561044657600080fd5b5061045a610455366004611a27565b610e99565b005b34801561046857600080fd5b5061023f610feb565b34801561047d57600080fd5b5061045a61048c366004611ad4565b610ff2565b34801561049d57600080fd5b5061023f6104ac366004611a27565b611193565b3480156104bd57600080fd5b5061023f6104cc366004611a4d565b6111a5565b3480156104dd57600080fd5b5061045a6104ec366004611ba0565b6111c2565b3480156104fd57600080fd5b5061021d61050c366004611a87565b611275565b34801561051d57600080fd5b5061023f61052c366004611c19565b61128c565b34801561053d57600080fd5b506102e061054c366004611a27565b61129e565b34801561055d57600080fd5b506105666112b9565b6040516101f49190612167565b60018054604080516020600284861615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156105f85780601f106105cd576101008083540402835291602001916105f8565b820191906000526020600020905b8154815290600101906020018083116105db57829003601f168201915b505050505081565b3360008181526007602090815260408083206001600160a01b038716808552925280832085905551919290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92590610659908690612091565b60405180910390a35060015b92915050565b60025481565b600061067d84836112dd565b61068884848461136e565b5060015b9392505050565b601281565b60006106a2611598565b905090565b6003546060906001600160a01b031633146106dd5760405162461bcd60e51b81526004016106d490612225565b60405180910390fd5b600280546003546001600160a01b03166000908152600560205260409020549091021161071c5760405162461bcd60e51b81526004016106d490612185565b60008484846040516020016107339392919061204d565b60408051601f1981840301815291815281516020928301206000818152600b9093529120549091504281111561077b5760405162461bcd60e51b81526004016106d490612205565b6212750081014211156107a05760405162461bcd60e51b81526004016106d4906121e5565b6000828152600b6020526040808220829055516060906001600160a01b0389169088906107ce908990611fbd565b60006040518083038185875af1925050503d806000811461080b576040519150601f19603f3d011682016040523d82523d6000602084013e610810565b606091505b5091509150816108325760405162461bcd60e51b81526004016106d490612215565b876001600160a01b0316847f71f2f703ef5605f99bb79556066217af28b9d991b829c9f4255e1abdf873fb4a898960405161086e929190612290565b60405180910390a3979650505050505050565b600a5481565b6003546001600160a01b031681565b6202a30081565b336000908152600460205260408120546001600160a01b039081169083168114610973576108c9611985565b50336000908152600660209081526040918290208251808401909352546001600160801b03808216808552600160801b9092041691830191909152156109495780516001600160a01b0380841660009081526005602052604080822080546001600160801b03958616900390558451928816825290208054919092160190555b5033600090815260046020526040902080546001600160a01b0319166001600160a01b0385161790555b50600192915050565b6001600160a01b03166000908152600660205260409020546001600160801b031690565b60086020526000908152604090205481565b6003546000906001600160a01b031633146109df5760405162461bcd60e51b81526004016106d490612225565b600280546003546001600160a01b031660009081526005602052604090205490910211610a1e5760405162461bcd60e51b81526004016106d490612185565b6000848484604051602001610a359392919061204d565b60408051601f1981840301815282825280516020918201206000818152600b909252919020426202a3000190819055909250906001600160a01b0387169083907f9ffdf0c63c8eec344b500e806ac1d1d37308fdf141a29d10cdd82c069aec6e4890610aa6908990899087906122b0565b60405180910390a350949350505050565b600033610ad65760405162461bcd60e51b81526004016106d4906121d5565b610ade611985565b503360009081526006602090815260408083208151808301835290546001600160801b038082168352600160801b9091041692810192909252516370a0823160e01b81529091907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190610b64903090600401611ffc565b60206040518083038186803b158015610b7c57600080fd5b505afa158015610b90573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bb49190611c37565b90506000600254600014610bd55781600254870281610bcf57fe5b04610bd7565b855b336000908152600460205260409020549091506001600160a01b0390811690829087168214610c695784516001600160801b031615610c405784516001600160a01b038316600090815260056020526040902080546001600160801b0392831690039055855116015b33600090815260046020526040902080546001600160a01b0319166001600160a01b0389161790555b6001600160a01b0387166000908152600560205260409020805482019055610c90836115f8565b8551016001600160801b03168552610cac4262015180016115f8565b6001600160801b03908116602080880191825233600081815260069092526040918290208951815494518616600160801b029086166001600160801b03199095169490941790941692909217909255600280548601905590516323b872dd60e01b81527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316916323b872dd91610d51919030908d9060040161200a565b602060405180830381600087803b158015610d6b57600080fd5b505af1158015610d7f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610da39190611bfb565b5060405133906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610dd9908790612091565b60405180910390a3506001979650505050505050565b6000805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156105f85780601f106105cd576101008083540402835291602001916105f8565b6000610973338484611625565b6006602052600090815260409020546001600160801b0380821691600160801b90041682565b600061097333848461136e565b6009546001600160a01b031681565b6001600160a01b038116610ebf5760405162461bcd60e51b81526004016106d4906121b5565b6000805260056020527f05b8ccbb9d4d8fb16ea74ce3c29a41f1b461fbdaff4714a0d9a8eb05499746bc54600254600954919003906001600160a01b03838116911614610f69576001600160a01b0382166000908152600560205260409020546002028110610f405760405162461bcd60e51b81526004016106d490612185565b600980546001600160a01b0319166001600160a01b0384161790554262093a8001600a55610fe7565b6001600160a01b038216600090815260056020526040902054600202811015610fd157600a54421015610fae5760405162461bcd60e51b81526004016106d490612265565b600954600380546001600160a01b0319166001600160a01b039092169190911790555b600980546001600160a01b03191690556000600a555b5050565b6212750081565b6001600160a01b0387166110185760405162461bcd60e51b81526004016106d490612245565b8342106110375760405162461bcd60e51b81526004016106d490612255565b6001600160a01b03871660008181526008602090815260409182902080546001818101909255925190926110b59261109a927f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9928e928e928e92918e910161209f565b604051602081830303815290604052805190602001206118ca565b858585604051600081526020016040526040516110d59493929190612121565b6020604051602081039080840390855afa1580156110f7573d6000803e3d6000fd5b505050602060405103516001600160a01b0316146111275760405162461bcd60e51b81526004016106d490612235565b6001600160a01b038088166000818152600760209081526040808320948b168084529490915290819020889055517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92590611182908990612091565b60405180910390a350505050505050565b60056020526000908152604090205481565b600760209081526000928352604080842090915290825290205481565b6003546001600160a01b031633146111ec5760405162461bcd60e51b81526004016106d490612225565b60008383836040516020016112039392919061204d565b60408051601f1981840301815282825280516020918201206000818152600b9092529181205591506001600160a01b0385169082907f7666fc3824e27fff7f62adc190adf39d59915b1634803f46f6002f5a071de7f7906112679087908790612290565b60405180910390a350505050565b600061128184836112dd565b610688848484611625565b600b6020526000908152604090205481565b6004602052600090815260409020546001600160a01b031681565b7f000000000000000000000000000000000000000000000000000000000000000081565b336001600160a01b03831614156112f357610fe7565b6001600160a01b0382166000908152600760209081526040808320338452909152902054600019811461136957818110156113405760405162461bcd60e51b81526004016106d4906121a5565b6001600160a01b0383166000908152600760209081526040808320338452909152902082820390555b505050565b611376611985565b506001600160a01b0383166000908152600660209081526040918290208251808401909352546001600160801b038082168452600160801b909104169082018190524210156113d75760405162461bcd60e51b81526004016106d490612195565b81156115555780516001600160801b03168211156114075760405162461bcd60e51b81526004016106d4906121c5565b826001600160a01b0316846001600160a01b031614611555576001600160a01b0383166114465760405162461bcd60e51b81526004016106d4906121d5565b61144e611985565b506001600160a01b0380841660008181526006602090815260408083208151808301835290546001600160801b038082168352600160801b90910416818401529383526004909152808220548885168352912054919290811691166114b2856115f8565b84516001600160a01b038916600090815260066020526040902080546001600160801b031916929091036001600160801b03169190911790556114f4856115f8565b92516001600160a01b03878116600090815260066020908152604080832080546001600160801b031916959098016001600160801b031694909417909655928116835260059094528082208054879003905591909216825290208054830190555b826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516112679190612091565b6000467f000000000000000000000000000000000000000000000000000000000000000081146115d0576115cb8161191f565b6115f2565b7f00000000000000000000000000000000000000000000000000000000000000005b91505090565b60006001600160801b038211156116215760405162461bcd60e51b81526004016106d4906121f5565b5090565b6001600160a01b03821661164b5760405162461bcd60e51b81526004016106d4906121d5565b611653611985565b506001600160a01b0383166000908152600660209081526040918290208251808401909352546001600160801b038082168452600160801b909104169082018190524210156116b45760405162461bcd60e51b81526004016106d490612195565b60006002547f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166370a08231306040518263ffffffff1660e01b81526004016117059190611ffc565b60206040518083038186803b15801561171d57600080fd5b505afa158015611731573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117559190611c37565b84028161175e57fe5b04905061177e61176d846115f8565b83516001600160801b031690611956565b6001600160a01b03868116600090815260066020908152604080832080546001600160801b0319166001600160801b0396909616959095179094556002805488900390556004808252848320548416835260059091529083902080548790039055915163a9059cbb60e01b81527f00000000000000000000000000000000000000000000000000000000000000009091169163a9059cbb91611824918891869101612032565b602060405180830381600087803b15801561183e57600080fd5b505af1158015611852573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118769190611bfb565b5060006001600160a01b0316856001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef856040516118bb9190612091565b60405180910390a35050505050565b600060405180604001604052806002815260200161190160f01b8152506118ef611598565b8360405160200161190293929190611fc9565b604051602081830303815290604052805190602001209050919050565b60007f47e79534a245952e8b16893a336b85a3d9ea9fa8c573f3d803afb92a794692188230604051602001611902939291906120f9565b8082036001600160801b0380841690821611156106655760405162461bcd60e51b81526004016106d490612175565b604080518082019091526000808252602082015290565b8035610665816123d7565b8051610665816123ee565b8035610665816123f7565b600082601f8301126119ce57600080fd5b81356119e16119dc82612314565b6122ed565b915080825260208301602083018583830111156119fd57600080fd5b611a08838284612391565b50505092915050565b8051610665816123f7565b803561066581612400565b600060208284031215611a3957600080fd5b6000611a45848461199c565b949350505050565b60008060408385031215611a6057600080fd5b6000611a6c858561199c565b9250506020611a7d8582860161199c565b9150509250929050565b600080600060608486031215611a9c57600080fd5b6000611aa8868661199c565b9350506020611ab98682870161199c565b9250506040611aca868287016119b2565b9150509250925092565b600080600080600080600060e0888a031215611aef57600080fd5b6000611afb8a8a61199c565b9750506020611b0c8a828b0161199c565b9650506040611b1d8a828b016119b2565b9550506060611b2e8a828b016119b2565b9450506080611b3f8a828b01611a1c565b93505060a0611b508a828b016119b2565b92505060c0611b618a828b016119b2565b91505092959891949750929550565b60008060408385031215611b8357600080fd5b6000611b8f858561199c565b9250506020611a7d858286016119b2565b600080600060608486031215611bb557600080fd5b6000611bc1868661199c565b9350506020611bd2868287016119b2565b925050604084013567ffffffffffffffff811115611bef57600080fd5b611aca868287016119bd565b600060208284031215611c0d57600080fd5b6000611a4584846119a7565b600060208284031215611c2b57600080fd5b6000611a4584846119b2565b600060208284031215611c4957600080fd5b6000611a458484611a11565b60008060408385031215611c6857600080fd5b6000611a6c85856119b2565b611c7d8161237f565b82525050565b611c7d8161234e565b611c7d81612359565b611c7d8161235e565b611c7d611caa8261235e565b61235e565b6000611cba8261233c565b611cc48185612340565b9350611cd481856020860161239d565b611cdd816123cd565b9093019392505050565b6000611cf28261233c565b611cfc8185612349565b9350611d0c81856020860161239d565b9290920192915050565b611c7d81612386565b6000611d2c601583612340565b74426f72696e674d6174683a20556e646572666c6f7760581b815260200192915050565b6000611d5d601083612340565b6f4e6f7420656e6f75676820766f74657360801b815260200192915050565b6000611d89600683612340565b65131bd8dad95960d21b815260200192915050565b6000611dab600d83612340565b6c4c6f7720616c6c6f77616e636560981b815260200192915050565b6000611dd4600d83612340565b6c2d32b9379037b832b930ba37b960991b815260200192915050565b6000611dfd600b83612340565b6a4c6f772062616c616e636560a81b815260200192915050565b6000611e24600c83612340565b6b5a65726f206164647265737360a01b815260200192915050565b6000611e4c600883612340565b675478207374616c6560c01b815260200192915050565b6000611e70601c83612340565b7f426f72696e674d6174683a2075696e74313238204f766572666c6f7700000000815260200192915050565b6000611ea9600983612340565b68546f6f206561726c7960b81b815260200192915050565b6000611ece600e83612340565b6d0a8f040e4caeccae4e8cac84074560931b815260200192915050565b6000611ef8600d83612340565b6c4f70657261746f72206f6e6c7960981b815260200192915050565b6000611f21600b83612340565b6a496e76616c69642053696760a81b815260200192915050565b6000611f48600a83612340565b692d32b9379037bbb732b960b11b815260200192915050565b6000611f6e600783612340565b66115e1c1a5c995960ca1b815260200192915050565b6000611f91600b83612340565b6a2bb0b4ba103637b733b2b960a91b815260200192915050565b611c7d81612361565b611c7d81612379565b600061068c8284611ce7565b6000611fd58286611ce7565b9150611fe18285611c9e565b602082019150611ff18284611c9e565b506020019392505050565b602081016106658284611c83565b606081016120188286611c74565b6120256020830185611c83565b611a456040830184611c95565b604081016120408285611c83565b61068c6020830184611c95565b6060810161205b8286611c83565b6120686020830185611c95565b818103604083015261207a8184611caf565b95945050505050565b602081016106658284611c8c565b602081016106658284611c95565b60c081016120ad8289611c95565b6120ba6020830188611c83565b6120c76040830187611c83565b6120d46060830186611c95565b6120e16080830185611c95565b6120ee60a0830184611c95565b979650505050505050565b606081016121078286611c95565b6121146020830185611c95565b611a456040830184611c83565b6080810161212f8287611c95565b61213c6020830186611fb4565b6121496040830185611c95565b61207a6060830184611c95565b6020808252810161068c8184611caf565b602081016106658284611d16565b6020808252810161066581611d1f565b6020808252810161066581611d50565b6020808252810161066581611d7c565b6020808252810161066581611d9e565b6020808252810161066581611dc7565b6020808252810161066581611df0565b6020808252810161066581611e17565b6020808252810161066581611e3f565b6020808252810161066581611e63565b6020808252810161066581611e9c565b6020808252810161066581611ec1565b6020808252810161066581611eeb565b6020808252810161066581611f14565b6020808252810161066581611f3b565b6020808252810161066581611f61565b6020808252810161066581611f84565b604081016122838285611fab565b61068c6020830184611fab565b6040810161229e8285611c95565b8181036020830152611a458184611caf565b606081016122be8286611c95565b81810360208301526122d08185611caf565b9050611a456040830184611c95565b602081016106658284611fb4565b60405181810167ffffffffffffffff8111828210171561230c57600080fd5b604052919050565b600067ffffffffffffffff82111561232b57600080fd5b506020601f91909101601f19160190565b5190565b90815260200190565b919050565b60006106658261236d565b151590565b90565b6001600160801b031690565b6001600160a01b031690565b60ff1690565b6000610665825b60006106658261234e565b82818337506000910152565b60005b838110156123b85781810151838201526020016123a0565b838111156123c7576000848401525b50505050565b601f01601f191690565b6123e08161234e565b81146123eb57600080fd5b50565b6123e081612359565b6123e08161235e565b6123e08161237956fea164736f6c634300060c000a";

type DictatorDAOConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DictatorDAOConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DictatorDAO__factory extends ContractFactory {
  constructor(...args: DictatorDAOConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    sharesSymbol: string,
    sharesName: string,
    token_: string,
    initialOperator: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<DictatorDAO> {
    return super.deploy(
      sharesSymbol,
      sharesName,
      token_,
      initialOperator,
      overrides || {}
    ) as Promise<DictatorDAO>;
  }
  getDeployTransaction(
    sharesSymbol: string,
    sharesName: string,
    token_: string,
    initialOperator: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      sharesSymbol,
      sharesName,
      token_,
      initialOperator,
      overrides || {}
    );
  }
  attach(address: string): DictatorDAO {
    return super.attach(address) as DictatorDAO;
  }
  connect(signer: Signer): DictatorDAO__factory {
    return super.connect(signer) as DictatorDAO__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DictatorDAOInterface {
    return new utils.Interface(_abi) as DictatorDAOInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DictatorDAO {
    return new Contract(address, _abi, signerOrProvider) as DictatorDAO;
  }
}
